---
title: Northern Ireland
include-in-header:
  text: |
    <script src = "base-in-slider.js"></script>
---

```{r setup}
#| include: FALSE

library(here)
source(paste0(here(), "/data_prep/sector_emissions.R"))

```

# {.sidebar}

```{r}
bscols(
  list(""),
  list("Click inside boxes to add other lines, by region, pollutant, or sector. (All) represents the total of all gas types added together. Click below to add other gas types to the line graph and delete (All Aggregated) to remove it from the line graph",
       filter_select(id = "POLLUTANT", label = "Pollutant",sharedData = Shared_sectordata4, group = ~Pollutant, selected = "(All Aggregated)"),
       "To focus on a particular RegionName, click and delete to remove from the line graph",
       filter_select(id = "RegionName ", label = "Region", sharedData = Shared_sectordata4, group = ~RegionName, selected = "Northern Ireland" ),
       "To focus on a particular TESS1, click and delete to remove from the line graph",
       filter_select(id = "TESS1", label = "TESS1", sharedData = Shared_sectordata4, group = ~TESS1, selected = c("Agriculture", "Buildings and product uses", "Domestic transport", "Electricity supply", "Fuel supply", "Industry", "LULUCF", "Waste")),
      # filter_select(id = "TESS2", label = "TESS2", sharedData = Shared_sectordata4, group = ~TESS2),
       filter_slider(id = "EmissionYear", label = "Year", sharedData = Shared_sectordata4, column = ~EmissionYear, timeFormat = "%Y")
  ),
  list(""),
  widths = c(1, NA, 1)
)
```

#

## Row {.tabset}

### Graph

```{r}

lineText = paste("\nSector:", sectordata4$TESS1, "\nRegion:", sectordata4$RegionName, "\nEmission:", sectordata4$Emission)

yaxistitle <- list(x = 0, y = 1, text = "Kilotonnes\nCO\u2082e", 
                   showarrow = F, xref= "paper", yref="paper", 
                   xanchor = "center", yanchor="bottom",
                   font = list(size = 12))

Shared_sectordata4 %>%
  plot_ly(x = ~eYear2,
  y = ~post1997,
  color = ~TESS1,
  type = "scatter",
  mode = "lines+markers",
  colors = sectorColours$colour,
  text = lineText,
  hoverinfo = "text",  # Add this line to show only the text on hover
  showlegend = FALSE) %>%
  add_trace(y = ~pre1997,
            mode = "markers") %>%
  layout(xaxis = list(title = "",
                      tickangle = 0,
                      zeroline = FALSE),
         yaxis = list(title = "",
                      tickformat = ",d",
                      showline = TRUE),
         annotations = list(yaxistitle),
         margin = list(t = 50),
#         hovermode = "x unified",
         title = "Sectoral emissions in Northern Ireland and other regions",
         title = list(font = 25),
         clickmode = "none") %>%
  config(displaylogo = FALSE)

```

### Table

```{r}

datatable(Shared_sectordata4,
                          colnames = c("Year", "Pollutant", "Region", "Sector", "CO\u2082 Equivalents (kilotonnes CO\u2082e)"),
                          fillContainer = FALSE,
                          rownames = FALSE,
                          extensions = 'Buttons', options = list(
                            columnDefs = list(list(visible = FALSE, targets = 5:8),
                                              list(className = "dt-body-right", targets = c(0,4)),
                                              list(className = "dt-right", targets = c(0,4)),
                                              list(className = 'dt-left', targets = "_all")),
                            pageLength = 15,
                            lengthMenu = c(5, 10, 15, 20),
                            dom = 'Bfrtip',
                            buttons = list(
                              list(extend = "pdf", exportOptions = list(columns = ":visible")),
                              list(extend = "excel", exportOptions = list(columns = ":visible")),
                              list(extend = "csv", exportOptions = list(columns = ":visible")),
                              list(extend = "copy", exportOptions = list(columns = ":visible")),
                              list(extend = "print", exportOptions = list(columns = ":visible"))
                            )
                          ))
```
